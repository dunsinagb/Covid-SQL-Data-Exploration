--------=====DATA EXPLORATION OF THE COVID-19 DATA SET=====------

--------=====Skills used: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types=====------

--------=====SETTING UP THE DATABASES, TABLES AND DATASET FOR EXPLORATORY ANALYSIS=====------

---CREATE TABLE 1- COVID VACCINATIONS 

DROP TABLE PUBLIC.COVIDVACCINATIONS

CREATE TABLE PUBLIC.COVIDVACCINATIONS (
		iso_code CHAR (50),
		continent CHAR (50),
		location1 CHAR (50),
		date1 DATE,
		new_tests  DECIMAL,
		total_tests DECIMAL,
		total_tests_per_thousand DECIMAL,
		new_tests_per_thousand DECIMAL,
		new_tests_smoothed DECIMAL,
		new_tests_smoothed_per_thousand DECIMAL,
		positive_rate DECIMAL,
		tests_per_case DECIMAL,
		tests_units CHAR (50),
		total_vaccinations DECIMAL,
		people_vaccinated DECIMAL,
		people_fully_vaccinated DECIMAL,
		new_vaccinations DECIMAL,
		new_vaccinations_smoothed DECIMAL,
		total_vaccinations_per_hundred DECIMAL,
		people_vaccinated_per_hundred DECIMAL,
		people_fully_vaccinated_per_hundred DECIMAL,
		new_vaccinations_smoothed_per_million DECIMAL,
		stringency_index DECIMAL,
		population_density DECIMAL,
		median_age DECIMAL,
		aged_65_older DECIMAL,
		aged_70_older DECIMAL,
		gdp_per_capita DECIMAL,
		extreme_poverty DECIMAL,
		cardiovasc_death_rate DECIMAL,
		diabetes_prevalence DECIMAL,
		female_smokers DECIMAL,
		male_smokers DECIMAL,
		handwashing_facilities DECIMAL,
		hospital_beds_per_thousand DECIMAL,
		life_expectancy DECIMAL,
		human_development_index DECIMAL
);

---IMPORT THE .CSV DATASET INTO THE CREATED COLUMNS

COPY PUBLIC.COVIDVACCINATIONS FROM '/private/tmp/CovidVaccinations.csv' WITH CSV HEADER

---VIEW DATASET

SELECT * FROM PUBLIC.COVIDVACCINATIONS

========================================
---CREATE TABLE 2- COVID DEATHS
DROP TABLE PUBLIC.COVIDDEATHS

CREATE TABLE PUBLIC.COVIDDEATHS (
	iso_code CHAR (50),
	continent CHAR (50),
	location1 CHAR (50),
	date1 DATE,
	population  NUMERIC,
	total_cases  NUMERIC,
	new_cases NUMERIC,
	new_cases_smoothed DECIMAL,
	total_deaths NUMERIC,
	new_deaths NUMERIC,
	new_deaths_smoothed DECIMAL,
	total_cases_per_million DECIMAL,
	new_cases_per_million DECIMAL,
	new_cases_smoothed_per_million DECIMAL,
	total_deaths_per_million DECIMAL,
	new_deaths_per_million DECIMAL,
	new_deaths_smoothed_per_million DECIMAL,
	reproduction_rate DECIMAL,
	icu_patients DECIMAL,
	icu_patients_per_million DECIMAL,
	hosp_patients DECIMAL,
	hosp_patients_per_million DECIMAL,
	weekly_icu_admissions DECIMAL,
	weekly_icu_admissions_per_million DECIMAL,
	weekly_hosp_admissions DECIMAL,
	weekly_hosp_admissions_per_million  DECIMAL
);

---IMPORT THE .CSV DATASET INTO THE CREATED COLUMNS

COPY PUBLIC.COVIDDEATHS FROM '/private/tmp/CovidDeaths.csv' WITH CSV HEADER

---VIEW DATASET

SELECT * FROM PUBLIC.COVIDDEATHS

=======================================

---QUERY THE COVID DEATHS DATA- FOCUS ON NIGERIA

SELECT * FROM PUBLIC.COVIDDEATHS
ORDER BY 3,4

--<the code above returns counts for continents, next code eliminates that>

SELECT * FROM PUBLIC.COVIDDEATHS
WHERE CONTINENT IS NOT NULL
ORDER BY 3,4

---SELECT COLUMNS OF INTEREST FROM COVID DEATHS DATA SET

SELECT LOCATION1, DATE1, TOTAL_CASES, NEW_CASES, TOTAL_DEATHS, POPULATION 
FROM PUBLIC.COVIDDEATHS
ORDER BY 1,2

---TOTAL CASES VERSUS TOTAL DEATHS
--total cases in nigeria
SELECT SUM (TOTAL_CASES) AS NIGERIA_TOTALCASES
FROM PUBLIC.COVIDDEATHS
WHERE coviddeaths.location1 LIKE '%Nigeria%'

--TOTAL NUMBER OF DEATHS IN NIGERIA
SELECT SUM (TOTAL_DEATHS) AS NIGERIA_TOTALCASES
FROM PUBLIC.COVIDDEATHS
WHERE coviddeaths.location1 LIKE '%Nigeria%'

SELECT LOCATION1, DATE1, TOTAL_CASES, TOTAL_DEATHS, (TOTAL_DEATHS/TOTAL_CASES)*100 AS DEATHPERCENTAGE
FROM PUBLIC.COVIDDEATHS
ORDER BY 1,2

--Percentage chance of dying if you attract covid in your country
SELECT LOCATION1, DATE1, TOTAL_CASES, TOTAL_DEATHS, (TOTAL_DEATHS/TOTAL_CASES)*100 AS DEATHPERCENTAGE
FROM PUBLIC.COVIDDEATHS
WHERE coviddeaths.location1 LIKE '%Nigeria%'
ORDER BY 1,2

---TOTAL CASES VERSUS POPULATION
--What percentage of the population contracted covid?
SELECT LOCATION1, DATE1, POPULATION, TOTAL_CASES, (TOTAL_CASES/POPULATION)*100 AS CASEPERCENTAGE
FROM PUBLIC.COVIDDEATHS
WHERE coviddeaths.location1 LIKE '%Nigeria%'
ORDER BY 1,2

--What countries have the highest infection rate?
SELECT LOCATION1, POPULATION, MAX(TOTAL_CASES) AS HIGHESTINFECTIONCOUNT, MAX((TOTAL_CASES/POPULATION))*100 AS PERCENTAGEPOPULATIONINFECTED
FROM PUBLIC.COVIDDEATHS
-- WHERE coviddeaths.location1 LIKE '%Nigeria%'
GROUP BY LOCATION1, POPULATION
ORDER BY PERCENTAGEPOPULATIONINFECTED DESC

--What countries have the highest death count & rate
SELECT LOCATION1, MAX(CAST (TOTAL_DEATHS AS INT)) AS TOTALDEATHCOUNT
FROM PUBLIC.COVIDDEATHS
-- WHERE coviddeaths.location1 LIKE '%Nigeria%'
WHERE CONTINENT IS NOT NULL
GROUP BY LOCATION1
ORDER BY TOTALDEATHCOUNT DESC

SELECT LOCATION1, POPULATION, MAX(TOTAL_DEATHS) AS TOTALDEATHCOUNT, MAX((TOTAL_DEATHS/POPULATION))*100 AS PERCENTAGEPOPULATIONDEAD
FROM PUBLIC.COVIDDEATHS
-- WHERE coviddeaths.location1 LIKE '%Nigeria%'
GROUP BY LOCATION1, POPULATION
ORDER BY TOTALDEATHCOUNT DESC


=====BREAKDOWN BY CONTINENTS======
--what continent has the highest death rate

SELECT COVIDDEATHS.CONTINENT, MAX(CAST (TOTAL_DEATHS AS INT)) AS TOTALDEATHCOUNT
FROM PUBLIC.COVIDDEATHS
-- WHERE coviddeaths.location1 LIKE '%Nigeria%'
WHERE CONTINENT IS NOT NULL
GROUP BY CONTINENT
ORDER BY TOTALDEATHCOUNT DESC 

SELECT LOCATION1, MAX(CAST (TOTAL_DEATHS AS INT)) AS TOTALDEATHCOUNT
FROM PUBLIC.COVIDDEATHS
-- WHERE coviddeaths.location1 LIKE '%Nigeria%'
WHERE CONTINENT IS NULL
GROUP BY LOCATION1
ORDER BY TOTALDEATHCOUNT DESC

-----GLOBAL NUMBERS----
SELECT SUM(new_cases) as total_cases, SUM(CAST(new_deaths AS int)) AS total_deaths, SUM(CAST(new_deaths AS int))/SUM(New_Cases)*100 as DeathPercentage
FROM PUBLIC.COVIDDEATHS
--Where location like '%Nigeria%'
WHERE continent IS NOT null 
--Group By date
ORDER BY 1,2


=======================================

---QUERY THE COVID VACCINATIONS DATA

SELECT * FROM PUBLIC.COVIDVACCINATIONS
ORDER BY 3,4

--JOIN THE TWO TABLES, COVID DEATHS & VACCINATIONS---

SELECT * 
FROM PUBLIC.COVIDDEATHS DEA
JOIN PUBLIC.COVIDVACCINATIONS VAC
ON DEA.LOCATION1=VAC.LOCATION1
AND DEA.DATE1=VAC.DATE1

--TOTAL POPULATION VS VACCINATION --
SELECT DEA.CONTINENT, DEA.LOCATION1, DEA.DATE1, DEA.POPULATION, VAC.NEW_VACCINATIONS
FROM PUBLIC.COVIDDEATHS DEA
JOIN PUBLIC.COVIDVACCINATIONS VAC
ON DEA.LOCATION1=VAC.LOCATION1
AND DEA.DATE1=VAC.DATE1
WHERE DEA.CONTINENT IS NOT NULL
ORDER BY 2

--CREATE A NEW COLUMN FOR CUMMULATIVE VACCINATION COUNT IN EACH COUNTRY--
SELECT DEA.CONTINENT, DEA.LOCATION1, DEA.DATE1, DEA.POPULATION, VAC.NEW_VACCINATIONS
, SUM(CAST(VAC.NEW_VACCINATIONS AS INT)) OVER (PARTITION BY DEA.LOCATION1 ORDER BY DEA.LOCATION1, DEA.DATE1) AS CUMMULATIVEVACCINATION
FROM PUBLIC.COVIDDEATHS DEA
JOIN PUBLIC.COVIDVACCINATIONS VAC
ON DEA.LOCATION1=VAC.LOCATION1
AND DEA.DATE1=VAC.DATE1
WHERE DEA.CONTINENT IS NOT NULL
ORDER BY 2

--INFO ON NIGERIA VACCINATION--
SELECT DEA.CONTINENT, DEA.LOCATION1, DEA.DATE1, DEA.POPULATION, VAC.NEW_VACCINATIONS
, SUM(CAST(VAC.NEW_VACCINATIONS AS INT)) OVER (PARTITION BY DEA.LOCATION1 ORDER BY DEA.LOCATION1, DEA.DATE1) AS CUMMULATIVEVACCINATION
FROM PUBLIC.COVIDDEATHS DEA
JOIN PUBLIC.COVIDVACCINATIONS VAC
ON DEA.LOCATION1=VAC.LOCATION1
AND DEA.DATE1=VAC.DATE1
WHERE DEA.LOCATION1 like '%Nigeria%'
ORDER BY 2

--DETERMINE THE NUMBER OF VACCINATED PEOPLE IN EACH COUNTRY--
WITH PopvsVac (Continent, Location1, Date1, Population, New_Vaccinations, CUMMULATIVEVACCINATION)
as
(
SELECT DEA.CONTINENT, DEA.LOCATION1, DEA.DATE1, DEA.POPULATION, VAC.NEW_VACCINATIONS
, SUM(CAST(VAC.NEW_VACCINATIONS AS INT)) OVER (PARTITION BY DEA.LOCATION1 ORDER BY DEA.LOCATION1, DEA.DATE1) AS CUMMULATIVEVACCINATION
--, (CUMMULATIVEVACCINATION/POPULATION)*100
FROM PUBLIC.COVIDDEATHS DEA
JOIN PUBLIC.COVIDVACCINATIONS VAC
ON DEA.LOCATION1=VAC.LOCATION1
AND DEA.DATE1=VAC.DATE1
WHERE DEA.CONTINENT IS NOT NULL
--ORDER BY 2
)
Select *, (CUMMULATIVEVACCINATION/Population)*100 AS PERCENTOFPOPULATIONVACCINATED
From PopvsVac

-- Using Temp Table to perform Calculation on Partition By in previous query

DROP Table if exists PERCENTOFPOPULATIONVACCINATED
Create Table PERCENTOFPOPULATIONVACCINATED
(
Continent CHAR (50),
Location1 CHAR (50),
Date1 date,
Population numeric,
New_vaccinations numeric,
CUMMULATIVEVACCINATION numeric
)

Insert into PERCENTOFPOPULATIONVACCINATED
Select dea.continent, dea.location1, dea.date1, dea.population, vac.new_vaccinations
, SUM(CAST(vac.new_vaccinations AS INT)) OVER (Partition by dea.Location1 Order by dea.location1, dea.Date1) as CUMMULATIVEVACCINATION
--, (CUMMULATIVEVACCINATION/population)*100
FROM PUBLIC.COVIDDEATHS DEA
JOIN PUBLIC.COVIDVACCINATIONS VAC
ON DEA.LOCATION1=VAC.LOCATION1
AND DEA.DATE1=VAC.DATE1
where dea.continent is not null 
--order by 2,3

Select *, (CUMMULATIVEVACCINATION/Population)*100
From PUBLIC.PERCENTOFPOPULATIONVACCINATED

--CREATE A VIEW WITH THE ABOVE TO STORE DATA FOR VISUALIZATION--
CREATE VIEW PERCENTPOPULATIONVACCINATED AS
SELECT dea.continent, dea.location1, dea.date1, dea.population, vac.new_vaccinations
, SUM(CAST(vac.new_vaccinations AS INT)) OVER (Partition by dea.Location1 Order by dea.location1, dea.Date1) as CUMMULATIVEVACCINATION
--, (CUMMULATIVEVACCINATION/population)*100
FROM PUBLIC.COVIDDEATHS DEA
JOIN PUBLIC.COVIDVACCINATIONS VAC
ON DEA.LOCATION1=VAC.LOCATION1
AND DEA.DATE1=VAC.DATE1
where dea.continent is not null 

SELECT * FROM public.percentpopulationvaccinated
LIMIT 100
